[versions]

coroutines = "1.8.1"
exposed = "0.54.0"
flyway = "10.17.3"
hikari = "5.1.0"
koin = "3.5.6"
kotest = "4.0.7"
kotlin = "2.0.20"
ktor = "2.3.12"
logback = "1.5.7"
mockk = "1.13.12"
mockkSpring = "4.0.2"
opensearch = "1.5.2"
pitest = "1.15.0"
postgres = "42.7.4"
spotless = "6.25.0"
springDependencyManagement = "1.1.6"
springboot = "3.3.3"
swagger = "7.8.0"
testContainers = "1.20.1"

[libraries]

# Kotlin & Coroutines
kotlin-core = { module = "org.jetbrains.kotlin:kotlin-stdlib" }
kotlin-jackson-module = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }
kotlin-reflection = { module = "org.jetbrains.kotlin:kotlin-reflect" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "coroutines" }

# Spring Boot
mockk-spring = { module = "com.ninja-squad:springmockk", version.ref = "mockkSpring" }
springboot-actuator-starter = { module = "org.springframework.boot:spring-boot-starter-actuator" }
springboot-test-starter = { module = "org.springframework.boot:spring-boot-starter-test" }
springboot-validation-starter = { module = "org.springframework.boot:spring-boot-starter-validation" }
springboot-webflux-starter = { module = "org.springframework.boot:spring-boot-starter-webflux" }

## Ktor
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-serialization-jackson = { module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor" }
ktor-server-netty-jvm = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-tests = { module = "io.ktor:ktor-server-tests", version.ref = "ktor" }

## DI
koin = { module = "io.insert-koin:koin-ktor", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

## Exposed
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-json = { module = "org.jetbrains.exposed:exposed-json", version.ref = "exposed" }

## Persistence
flyway = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
postgres-driver = { module = "org.postgresql:postgresql", version.ref = "postgres" }

## OpenSearch
opensearch-spring-starter = { module = "org.opensearch.client:spring-data-opensearch-starter", version.ref = "opensearch" }
opensearch-test-autoconfigure = { module = "org.opensearch.client:spring-data-opensearch-test-autoconfigure", version.ref = "opensearch" }

## Logging
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

## Tests
kotest-assertions-jvm = { module = "io.kotest:kotest-assertions-jvm", version.ref = "kotest" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "kotlin" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

## Test Containers
test-containers = { module = "org.testcontainers:junit-jupiter", version.ref = "testContainers" }
test-containers-postgres = { module = "org.testcontainers:postgresql", version.ref = "testContainers" }

[plugins]

kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
openapi-generator = { id = "org.openapi.generator", version.ref = "swagger" }
pitest = { id = "info.solidsoft.pitest", version.ref = "pitest" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
springboot = { id = "org.springframework.boot", version.ref = "springboot" }
springboot-dependency-management = { id = "io.spring.dependency-management", version.ref = "springDependencyManagement" }

[bundles]

kotlin-all = [
    "kotlin-core",
    "kotlin-jackson-module",
    "kotlin-reflection",
    "kotlinx-coroutines-core",
    "kotlinx-coroutines-reactor",
]

springboot-all = [
    "springboot-actuator-starter",
    "springboot-validation-starter",
    "springboot-webflux-starter",
]

springboot-tests-all = [
    "springboot-test-starter",
    "mockk-spring",
]

ktor-all = [
    "ktor-client-cio",
    "ktor-client-content-negotiation",
    "ktor-core",
    "ktor-serialization-kotlinx-json",
    "ktor-server-netty-jvm",
]

ktor-tests-all = [
    "ktor-client-mock",
    "ktor-tests",
]

exposed-all = [
    "exposed-core",
    "exposed-dao",
    "exposed-java-time",
    "exposed-jdbc",
    "exposed-json",
]

persistance-all = [
    "flyway",
    "hikari",
    "postgres-driver",
]

persistance-test-all = [
    "test-containers",
    "test-containers-postgres",
]

tests-all = [
    "kotest-assertions-jvm",
    "kotlin-coroutines-test",
    "kotlin-test-junit",
    "mockk"
]
